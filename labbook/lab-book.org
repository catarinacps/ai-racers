#+title: Lab-book do henrique
#+author: Henrique Silva
#+email: hcpsilva@inf.ufrgs.br
#+infojs_opt:
#+property: session *R*
#+property: cache yes

Esse dia eventualmente ia chegar, né

*Afazeres*:

- [X] adicionar novos parametros
- [X] achar modo de salvar estado (edit: pickle!)
- [X] fazer script dos experimentos
- [ ] salvar estado
  - [ ] do controlador 1
  - [ ] do controlador 2
  - [ ] do controlador 3
  - [ ] do controlador 4

* Experimentos

Aqui ficarão coisas relacionadas aos experimentos

#+begin_src R :session :results none
library(DoE.base)
library(tidyverse)
options(crayon.enabled=FALSE)
#+end_src

** Design Comum

A seed randômica é:

#+begin_src R :session :results value :exports results
floor(runif(1,1,99999))
#+end_src

#+RESULTS:
: 46958

Para cada sessão de treinamento:

#+begin_src R :session :results output :exports both
bot = c('parked_bots', 'dumb_bot', 'safe_bot', 'ninja_bot')
pista = c('track1', 'baby_park', 'interlagos', 'many_forks')

fac.design(
    nfactors=2,
    replications=1,
    repeat.only=FALSE,
    blocks=1,
    randomize=TRUE,
    seed=46958,
    factor.names=list(
      enemy=bot,
      track=pista)) %>%
  as_tibble %>%
  write_delim("experiments/runs.plan", delim=" ", col_names=FALSE)

# the space delimited file is to help with the posterior parsing in the shell
# script
#+end_src

#+RESULTS:
: creating full factorial with 16 runs ...

** Algoritmos Genéticos

*** Design

#+begin_src R :session :results output :exports both
taxa_mutacao = c(0.05, 0.1, 0.15, 0.2, 0.25, 0.35)
populacao = c(5, 10, 20, 40, 80, 160, 320)
roleta = c(0.025, 0.05, 0.1, 0.15)
eletismo = c(0.1, 0.15, 0.2, 0.25, 0.3)

fac.design(
  nfactors=4,
  replications=1,
  repeat.only=FALSE,
  blocks=1,
  randomize=TRUE,
  seed=46958,
  factor.names=list(
    neighbors=populacao,
    roulette=roleta,
    mutation=taxa_mutacao,
    elitism=eletismo)) %>%
  as_tibble %>%
  write_delim("experiments/ga.plan", delim=" ", col_names=FALSE)

# the space delimited file is to help with the posterior parsing in the shell
# script
#+end_src

#+RESULTS:
: creating full factorial with 840 runs ...

*** Script

And here we have our script:

#+begin_src bash :shebang "#!/bin/bash" :exports both :tangle experiments/ga.slurm
#SBATCH --time=72:00:00
#SBATCH --chdir=.
#SBATCH --partition=tupi
#SBATCH --nodes=1
#SBATCH --output=%x_%j.out
#SBATCH --error=%x_%j.err
#BATCH --mail-type=END,FAIL
#BATCH --mail-user=hcpsilva@inf.ufrgs.br

set -euo pipefail

# machine:
MACHINE=${SLURMD_HOSTNAME}_${SLURM_CPUS_ON_NODE}

# parameters:
# the experiment ID, defined in the lab-book
EXP_ID=ga_ia_t1
# the experiment directory
EXP_DIR=$1

# experiment name (which is the ID and the machine and its core count)
EXP_NAME=${EXP_ID}_${MACHINE}

# go to the scratch dir
cd $SCRATCH

# and clean everything
rm -rf *

# prepare our directory
mkdir $EXP_NAME
pushd $EXP_NAME

# copy the code folder
cp -r $(dirname $EXP_DIR) code
mkdir results
results_csv=$(readlink -f results/${EXP_NAME}.csv)
pushd code

# init the csv results file
echo "population,roulette,mutation,elitism,iteration,bot,track,score" > $results_csv

# genetic algorithms
while read -r population roulette mutation elitism; do
    iter=0
    csv_line=${population},${roulette},${mutation},${elitism}

    for i in {1..6}; do
        # each learning session will iterate 5 times
        # each plan has 16 combinations
        # therefore, we'll run 240 times

        while read -r bot track; do
            echo
            echo "--> Running with params: $population $roulette $mutation $elitism $bot $track"

            # run learning session
            score=$(python3 AIracers.py -t $track -b $bot -a ${population},${roulette},${mutation},${elitism} -c 1 learn)

            # update iteration counter
            ((iter+=5))

            # commit results to csv
            echo ${csv_line},${iter},${bot},${track},${score} >> $results_csv
        done < $EXP_DIR/runs.plan
    done
done < $EXP_DIR/ga.plan

popd

# pack everything and send to the exp dir
tar czf $EXP_DIR/data/$EXP_NAME.tar.gz *

popd
rm -rf $SCRATCH/*
#+end_src

** CMA-ES

*** Design

#+begin_src R :session :results output :exports both
populacao = c(5, 10, 20, 40, 80, 160, 320)
top = c(0.1, 0.2, 0.3, 0.5)
delta = c(0.001, 0.01, 0.02, 0.05, 0.1)

fac.design(
  nfactors=3,
  replications=1,
  repeat.only=FALSE,
  blocks=1,
  randomize=TRUE,
  seed=46958,
  factor.names=list(
    sample_size=populacao,
    top_percentage=top,
    convergence_delta=delta)) %>%
  as_tibble %>%
  write_delim("experiments/cmaes.plan", delim=" ", col_names=FALSE)

# the space delimited file is to help with the posterior parsing in the shell
# script
#+end_src

#+RESULTS:
: creating full factorial with 140 runs ...

*** Script

And here we have our script:


#+begin_src bash :shebang "#!/bin/bash" :exports both :tangle experiments/cmaes.slurm
#SBATCH --time=72:00:00
#SBATCH --chdir=.
#SBATCH --partition=tupi
#SBATCH --nodes=1
#SBATCH --output=%x_%j.out
#SBATCH --error=%x_%j.err
#BATCH --mail-type=END,FAIL
#BATCH --mail-user=hcpsilva@inf.ufrgs.br

set -euo pipefail

# machine:
MACHINE=${SLURMD_HOSTNAME}_${SLURM_CPUS_ON_NODE}

# parameters:
# the experiment ID, defined in the lab-book
EXP_ID=cmaes_ia_t1
# the experiment directory
EXP_DIR=$1

# experiment name (which is the ID and the machine and its core count)
EXP_NAME=${EXP_ID}_${MACHINE}

# go to the scratch dir
cd $SCRATCH

# and clean everything
rm -rf *

# prepare our directory
mkdir $EXP_NAME
pushd $EXP_NAME

# copy the code folder
cp -r $(dirname $EXP_DIR) code
mkdir results
results_csv=$(readlink -f results/${EXP_NAME}.csv)
pushd code

# init the csv results file
echo "sample_size,top_percentage,convergence_delta,iteration,bot,track,score" > $results_csv

# genetic algorithms
while read -r sample_size top_percentage convergence_delta; do
    iter=0
    csv_line=${sample_size},${top_percentage},${convergence_delta}

    for i in {1..6}; do
        # each learning session will iterate 5 times
        # each plan has 16 combinations
        # therefore, we'll run 240 times

        while read -r bot track; do
            echo
            echo "--> Running with params: $sample_size $top_percentage $convergence_delta $bot $track"

            # run learning session
            score=$(python3 AIracers.py -t $track -b $bot -a ${sample_size},${top_percentage},${convergence_delta} -c 2 learn)

            # update iteration counter
            ((iter+=5))

            # commit results to csv
            echo ${csv_line},${iter},${bot},${track},${score} >> $results_csv
        done < $EXP_DIR/runs.plan
    done
done < $EXP_DIR/cmaes.plan

popd

# pack everything and send to the exp dir
tar czf $EXP_DIR/data/$EXP_NAME.tar.gz *

popd
rm -rf $SCRATCH/*
#+end_src

** Comparação

*** Design

#+begin_src R :session :results output :exports both
num_vizinhos = c(5, 10, 20, 40, 80, 160, 320)
eletismo = c(0.1, 0.15, 0.2, 0.25, 0.3)
cntr = c('1', '2', '3', '4')

fac.design(
  nfactors=3,
  replications=1,
  repeat.only=FALSE,
  blocks=1,
  randomize=TRUE,
  seed=46958,
  factor.names=list(
    controller=cntr,
    neighbors=num_vizinhos,
    elitism=eletismo)) %>%
  as_tibble %>%
  write_delim("experiments/combined.plan", delim=" ", col_names=FALSE)

# the space delimited file is to help with the posterior parsing in the shell
# script
#+end_src

#+RESULTS:
: creating full factorial with 140 runs ...

*** Script

#+begin_src bash :shebang "#!/bin/bash" :exports both :tangle experiments/combined.slurm
#SBATCH --time=72:00:00
#SBATCH --chdir=.
#SBATCH --partition=tupi
#SBATCH --nodes=1
#SBATCH --output=%x_%j.out
#SBATCH --error=%x_%j.err
#BATCH --mail-type=END,FAIL
#BATCH --mail-user=hcpsilva@inf.ufrgs.br

set -euo pipefail

# machine:
MACHINE=${SLURMD_HOSTNAME}_${SLURM_CPUS_ON_NODE}

# parameters:
# the experiment ID, defined in the lab-book
EXP_ID=combined_ia_t1
# the experiment directory
EXP_DIR=$1

# experiment name (which is the ID and the machine and its core count)
EXP_NAME=${EXP_ID}_${MACHINE}

# go to the scratch dir
cd $SCRATCH

# and clean everything
rm -rf *

# prepare our directory
mkdir $EXP_NAME
pushd $EXP_NAME

# copy the code folder
cp -r $(dirname $EXP_DIR) code
mkdir results
results_csv=$(readlink -f results/${EXP_NAME}_combined.csv)
pushd code

# init the csv results file
echo "controller,neighbors,elitism,iteration,bot,track,score" > $results_csv

# combined run
while read -r controller neighbors elitism; do
    iter=0
    csv_line=${controller},${neighbors},${elitism}

    for i in {1..6}; do
        # each learning session will iterate 5 times
        # each plan has 16 combinations
        # therefore, we'll run 240 times

        while read -r bot track; do
            echo
            echo "--> Running with params: $controller $neighbors $elitism $bot $track"

            # run learning session
            score=$(python3 AIracers.py -t $track -b $bot -a $neighbors $elitism -c $controller learn)

            # update iteration counter
            ((iter+=5))

            # commit results to csv
            echo ${csv_line},${iter},${bot},${track},${score} >> $results_csv
        done < $EXP_DIR/runs.plan
    done
done < $EXP_DIR/combined.plan

popd

# pack everything and send to the exp dir
tar czf $EXP_DIR/data/$EXP_NAME.tar.gz *

popd
rm -rf $SCRATCH/*
#+end_src
